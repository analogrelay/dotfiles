#!/usr/bin/env bash

usage() {
    echo "Usage: patsy"
    echo "  Lists all available tokens"
    echo "Usage: patsy <NAME>"
    echo "  Gets the token with the specified name"
    echo "Usage: patsy -d|--delete <NAME>"
    echo "  Deletes the token with the specified name"
    echo "Usage: patsy <NAME> <VALUE>"
    echo "  Sets (overwriting if it already exists) a token with the specified name and value"
}

die() {
    usage
    echo "$1" 1>&2
    exit 1
}

NAME=
VALUE=
while [[ $# -gt 0 ]]; do
    key="$1"
    shift
    case $key in
        -h|--help)
            usage
            exit 0
            ;;
        -d|--delete)
            DEL=1
            ;;
        *)
            if [ -z "$NAME" ]; then
                NAME="$key"
            elif [ -z "$VALUE" ]; then
                VALUE="$key"
            else
                die "Too many arguments specified!"
            fi
    esac
done

if [ "$DEL" = 1 ]; then
    if [ -z "$NAME" ]; then
        die "The '<NAME>' value must be specified when deleting"
    fi
    security delete-generic-password -a "patsy::$NAME" -s "patsy::$NAME" -D "patsy token" -l "$NAME" >/dev/null
    exit $?
fi

if [ -z "$NAME" ]; then
    security dump-keychain | grep "acct.*patsy::" | sed "s/^.*patsy:://g" | sed "s/\"$//g"
elif [ -z "$VALUE" ]; then
    security find-generic-password -D "patsy token" -l "$NAME" -w
else
    security add-generic-password -a "patsy::$NAME" -s "patsy::$NAME" -D "patsy token" -l "$NAME" -w "$VALUE"
    echo "added patsy token '$NAME'"
fi