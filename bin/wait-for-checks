#!/usr/bin/env bash
#/ Usage: wait-for-checks [-t|--timeout <TIMEOUT>] [<URL>|<NUMBER>|<BRANCH>]
#/
#/ Arguments:
#/   <URL>                     The URL of a PR to watch.
#/   <NUMBER>                  The number of a PR, in the repo upstream of your current directory, to watch.
#/   <BRANCH>                  The name of a branch, in the repo upstream of your current directory, to watch.
#/
#/ If no argument is provided, the branch currently checked-out in your working directory is used.
#/
#/ Options:
#/   -t|--timeout <TIMEOUT>   Wait <TIMEOUT> seconds for checks to go green (default is 300, 5 minutes)
#/

if ! type gh >/dev/null 2>&1; then
  echo "This script requires the 'gh' command."
  exit 1
fi

if ! type git >/dev/null 2>&1; then
  echo "This script requires the 'git' command."
  exit 1
fi

usage() {
  cat "$0" | grep "^#/" | cut -c4-
}

target=
timeout=300
while [[ $# -gt 0 ]]; do
  key="$1"
  shift

  case "$key" in
    -t|--timeout)
      timeout="$1"
      shift
      ;;
    -h|--help)
      usage
      exit 0
      ;;
    *)
      target="$key"
      shift
      ;;
  esac
done

if [ -z "$target" ]; then
  target=$(git rev-parse --abbrev-ref HEAD)
fi

if gh pr checks "$target" 2>&1 | grep "no pull requests" >/dev/null 2>&1; then
  echo "Could not find PR checks for '$target'" 1>&2
  exit 0
fi

echo "Waiting $timeout seconds for PR checks on '$target' to complete..."

counter=0
while [[ $counter -lt $timeout ]]; do
  if gh pr checks $target >/dev/null 2>&1; then
    echo "Checks have completed!"
    notify "🏁 Your build is finished! 🏁"
    exit 0
  fi
  sleep 1

  counter=$((counter + 1))
done

echo "Checks did not complete after $timeout seconds"
exit 1