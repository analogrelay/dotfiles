#/ Usage: wt <command> <options>
#/
#/ Commands:
#/   add <branch> [<name>]     Add a Worktree for the current repo.
#/   go [<name>]               Go to a Worktree.
#/
set -x

if ! type git >/dev/null 2>&1; then
  echo "This script requires the 'git' command."
  return
fi

root_dir=$(git rev-parse --show-toplevel)
if [ -z "$root_dir" ]; then
  echo "This script must be run from within a git repository."
  return
fi

cd "$root_dir"
base_name=$(basename $root_dir)
wt_root=$(dirname $root_dir)

usage() {
  cat "$0" | grep "^#/" | cut -c4-
}

_cmd_add() {
    local branch="$1"
    local name="$2"
    
    if [ -z "$branch" ]; then
        echo "You must provide a branch name." 1>&2
        return
    fi
    
    if [ -z "$name" ]; then
        name=$(echo "$branch" | sed 's|anurse/||g' | sed 's/[^a-zA-Z0-9]/-/g')
    fi

    # Check if the branch exists locally
    if ! git branch --list | grep "$branch" >/dev/null 2>&1; then
        # It doesn't. Check if it exists remotely
        if git ls-remote --heads origin | grep "refs/heads/$branch" >/dev/null 2>&1; then
            # It does! Create the local tracking branch
            echo "Creating local tracking branch for '$branch'..."
            git branch --track "$branch" "origin/$branch"
        else
            # It does not! Create a branch off main
            echo "Creating local branch '$branch' off of 'main'"
            git branch "$branch" main
        fi
    fi
    
    # Add a worktree for the branch
    git worktree add "$wt_root/$base_name@$name" "$branch"
}

_cmd_go() {
    local query="$1"

    if [ -d "$wt_root/$base_name@$query" ]; then
        # Exact match!
        cd "$wt_root/$base_name@$query"
        return
    fi

    # Find potential matches
    local matches=$(find "$wt_root" -maxdepth 1 -type d -name "$base_name@*" | sed "s|$wt_root/$base_name@||g" | sort)
    if type fzf >/dev/null 2>&1; then
        qry_arg=("--query" "$1" "--select-1" "--exit-0")
        target=$(echo "$matches" | fzf --query "$query" --select-1 --exit-0)
        if [ $? != 0 ]; then
            echo "I couldn't find a worktree named '$query'."
            return
        else
            cd "$wt_root/$base_name@$target"
        fi
    else
        echo "I couldn't find a worktree named '$query'. These are all the worktrees I know about:"
        echo "$matches"
    fi
}

cmd="$1"
shift

case "$cmd" in
    add)
        _cmd_add "$@"
        ;;
    go)
        _cmd_go "$@"
        ;;
    *)
        usage
        return
        ;;
esac