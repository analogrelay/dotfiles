#!/usr/bin/env bash

set -eo pipefail
[ "$DEBUG" = "1" ] && set -x
DOTFILES_ROOT="$( cd "$(dirname $(dirname "$0"))" ; pwd -P )"
cd $DOTFILES_ROOT

# If we're not in the $HOME/.dotfiles folder, create a symlink
# Everything else depends on that being where we are.
if [ "$DOTFILES_ROOT" != "$HOME/.dotfiles" ]; then
    ln -s $DOTFILES_ROOT "$HOME/.dotfiles"
fi

source "$DOTFILES_ROOT/modules/zsh/_utils.sh"

uname=$(uname)
if [ "$uname" == "Darwin" ]; then
    if ! type brew >/dev/null 2>&1; then
        heading "installing homebrew"
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    fi

    if type python3 >/dev/null 2>&1; then
        install_dir=$(python3 -c "import os, site; print(os.path.join(site.USER_BASE, 'Scripts' if os.name == 'nt' else 'bin'))")
        export PATH="$install_dir:$PATH"
    fi
fi

# If ansible is here already, just exit successfully
if ! type ansible >/dev/null 2>&1; then
    bigheading "installing ansible"

    if [ "$uname" == "Linux" ]; then
        if type apt >/dev/null 2>&1; then
            heading "updating apt..."
            sudo apt-get update -qyy
            heading "installing ansible..."
            sudo apt-get install -qyy ansible
        else
            echo "TODO: unknown linux distribution" 1>&2
            exit 1
        fi
    elif [ "$uname" == "Darwin" ]; then
        heading "installing pip"
        [ -d tmp ] || mkdir tmp
        curl -sSL https://bootstrap.pypa.io/get-pip.py -o tmp/get-pip.py
        python3 tmp/get-pip.py --user

        heading "installing ansible"
        python3 -m pip install --user ansible
    fi
fi

# Playbooks that will be run automatically during setup
PLAYBOOKS=(base zsh vim tmux git ruby)

if [ -z "$CODESPACES" ]; then
    # Add playbooks for a non-codespaces setup
    PLAYBOOKS+=(ssh 1password gpg alacritty)
elif [ "$CODESPACES" = "true" ]; then
    PLAYBOOKS+=(codespaces)
fi

if [ "$(uname)" = "Darwin" ]; then
    # Add playbooks for macOS setup
    PLAYBOOKS+=(hammerspoon workstation)
fi

# Apply the base playbooks
bin/apply "${PLAYBOOKS[@]}"
